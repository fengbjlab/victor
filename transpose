#! /bin/sh
# It uses ${1+"$@"} to supply file names on the awk command line 
# so that if no files are specified awk will read its standard input. 
# This is much better than plain $* which can't handle filenames containing whitexspace.
# downloaded from http://docstore.mik.ua/orelly/unix/sedawk/ch13_09.htm
# in input file, fields are divided by any combination of SPACEs and TABs
# in output file, fields are divided by one SPACE
# Therefore, it will output wrong when a field content is empty string !!!

if [ "$#" -eq 1 -a "$1" == "-h" ]
then
  echo "This script transposes a matrix, assuming that all rows have the same number of fields."
  echo "Usage: transpose [FILE]   (If FILE is not specified, read standard input)"
  echo "In input, fields are divided by any combination of SPACEs and TABs."
  echo "In output, fields are divided by one SPACE."
  echo "Leading and trailing white spaces are ignored."
  exit
fi

if [ "$#" -eq 1 -a "$1" == "--help" ]
then
  echo "This script transposes a matrix, assuming that all rows have the same number of fields."
  echo "Usage: transpose [FILE]   (If FILE is not specified, read standard input)"
  echo "In input, fields are divided by any combination of SPACEs and TABs."
  echo "In output, fields are divided by one SPACE."
  echo "Leading and trailing white spaces are ignored."
  exit
fi

exec awk '
NR == 1 {
	n = NF
	for (i = 1; i <= NF; i++)
		row[i] = $i
	next
}
{
	if (NF > n)
		n = NF
	for (i = 1; i <= NF; i++)
		row[i] = row[i] " " $i
}
END {
	for (i = 1; i <= n; i++)
		print row[i]
}' ${1+"$@"}

